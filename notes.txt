Commands:

FIRST NOTE: the $ simply indicates it is a bash prompt. Do NOT include it or the terminal will error.

$ git init

This command will create a git repository. You will get a notice: "Initialized empty Git repository in ..." This created a .git folder if the current directory. You can see the directory by typing: $ ls -la. Zshell will also show you are on "master" branch in paranthesis.

Now that you have created a git repository, you need to add something to it. To add all files to it, simply do:

$ git add *

This command will grab all files (in programming a * usually means "Everything") and gets them packaged up to send to your remote (github).

Now you can commit the files which will create a new point frozen in time. It is important to add a message so you/others can see information about the commit. Adding "-m" is for message.

$ git commit -m "Initial commit"

Now that you have a commit (frozen point in time), you need to push it up to your remote (github). The FIRST time you do this, you need to tell git where the remote is, in our case, github, before you can push it.

$ git remote add origin https://github.com/YOURUSERNAME/YOURREPONME.GIT

Once this is done, you can actually push it up to that location.

$ git push -u origin master

This line sends all the changes you've made on your local repo (you did "git add" and "git commit") and sends them up to the link above which will, from now on, be known as "origin." 

Code.

Repeat.



DESCRIPTION
     The grep utility searches any given input files, selecting lines that
     match one or more patterns.  By default, a pattern matches an input line
     if the regular expression (RE) in the pattern matches the input line
     without its trailing newline.  An empty expression matches every line.
     Each input line that matches at least one of the patterns is written to
     the standard output.

     grep is used for simple patterns and basic regular expressions (BREs);
     egrep can handle extended regular expressions (EREs).  See re_format(7)
     for more information on regular expressions.  fgrep is quicker than both
     grep and egrep, but can only handle fixed patterns (i.e. it does not
     interpret regular expressions).  Patterns may consist of one or more
     lines, allowing any of the pattern lines to match a portion of the input.

     zgrep, zegrep, and zfgrep act like grep, egrep, and fgrep, respectively,
     but accept input files compressed with the compress(1) or gzip(1) com-
     pression utilities.

